name: Build and Deploy 11ty Site

on:
  push:
    branches:
      - main
    paths-ignore:
      - .gitignore
      - README.md
      - CONTRIBUTING.md
      - LICENSE
  pull_request:
    branches:
      - main
  workflow_dispatch:
    inputs:
      force_deploy:
        description: 'Force deploy the latest changes'
        required: false
        default: 'false'
# Adding concurrency
concurrency:
  group: build-and-deploy-${{ github.ref }}  # Group name relevant to workflow and branch
  cancel-in-progress: true  # Cancel previous runs if a new one is triggered
  
jobs:
  test:
    runs-on: ubuntu-latest
    env:
      URL_CHECKER_TIMEOUT: 30  # Timeout value for the URL checker script
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Cache Node.js modules
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-node_modules-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node_modules-

      - name: Install dependencies
        run: npm install
        continue-on-error: false

      - name: Install gh-pages
        run: npm install gh-pages --save-dev

      - name: Run linters
        run: npm run lint:all
        continue-on-error: false

      - name: Run URL checker
        run: node script/url-checker.js -t ${{ env.URL_CHECKER_TIMEOUT }} -d src/posts
        continue-on-error: false

  build:
    runs-on: ubuntu-latest
    needs: test
    env:
      PATH_PREFIX: /${{ github.repository }}/
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup GitHub Pages
        uses: actions/configure-pages@v4
        with:
          enablement: 'true'

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Cache Node.js modules
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-node_modules-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node_modules-

      - name: Install dependencies
        run: npm install

      - name: Set PATH_PREFIX
        run: |
          PP="/$(echo "${{ github.repository }}" | cut -d '/' -f2-)/"
          echo "PATH_PREFIX=$PP" >> $GITHUB_ENV
          
      - name: Build the static pages
        run: npm run prod

      - name: Verify _site folder exists
        run: ls -l _site

      - name: Upload static files as artifact
        id: deployment
        uses: actions/upload-pages-artifact@v3
        with:
          path: _site/

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: read
      pages: write
      id-token: write
      issues: write  # Added permission for issues

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download built site artifact
        uses: actions/download-artifact@v4

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

      - name: Install GitHub CLI
        run: sudo apt-get install gh

      - name: Authenticate GitHub CLI
        run: gh auth login --with-token <<< "${{ secrets.GITHUB_TOKEN }}"

      - name: Create deployment status issue
        id: create_issue
        run: |
          date=$(date +'%Y-%m-%d')
          status="succeeded"
          if [[ "${{ job.status }}" != "success" ]]; then
            status="failed"
          fi
          url="${{ steps.deployment.outputs.page_url }}"
          echo "Creating issue with title: $date - Deployment: $status"
          echo "URL: $url"
          gh issue create --title "$date - Deployment: $status" --body "URL: $url"
