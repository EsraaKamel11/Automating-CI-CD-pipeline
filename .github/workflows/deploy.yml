name: Knowledge Base CI/CD Workflow

on:
  push:
    branches:
      - main
    paths-ignore:
      - .gitignore
      - README.md
      - CONTRIBUTING.md
      - LICENSE
  pull_request:
    branches:
      - main
  workflow_dispatch:
    inputs:
      force_deploy:
        description: 'Force deploy the latest changes'
        required: false
        default: 'false'

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      URL_CHECKER_TIMEOUT: 30  # Timeout value for the URL checker script
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install
        continue-on-error: false
      
      - name: Run linters
        run: npm run lint:all
        continue-on-error: false

      - name: Run URL checker
        run: node script/url-checker.js -t ${{ env.URL_CHECKER_TIMEOUT }} -d src/posts
        continue-on-error: false

  build:
    runs-on: ubuntu-latest
    needs: test
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Setup GitHub Pages
      uses: actions/configure-pages@v4

    - name: Setup Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '18'

    - name: Install dependencies
      run: npm install
      continue-on-error: false

    - name: Set environment variable for PATH_PREFIX
      run: echo "PATH_PREFIX='/${{ github.event.repository.name }}/'" >> $GITHUB_ENV

    - name: Build the static pages
      run: npm run prod
      continue-on-error: false

    - name: Upload built site
      uses: actions/upload-artifact@v3  # Updated version
      with:
        name: built_site
        path: _site/**


  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download built site
        uses: actions/download-artifact@v2
        with:
          name: built_site

      - name: Deploy to GitHub Pages
        run: |
          echo "Deploying to GitHub Pages..."
          # Add your GitHub Pages deployment logic here
        continue-on-error: false

      - name: Create deployment status issue
        run: |
          date=$(date +"%Y-%m-%d")
          status="succeeded" # Update this based on the deployment result
          url="https://github.com/EsraaKamel11/Automating-CI-CD-pipeline" # Replace with the actual URL
          gh issue create --title "$date - Deployment: $status" --body "URL: $url" --assignee $GITHUB_ACTOR
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
